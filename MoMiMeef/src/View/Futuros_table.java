/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Data.Futuro;
import ServerAccess.MEFF_Futuros;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lala
 */
public class Futuros_table extends javax.swing.JPanel {

    /**
     * Creates new form table_Futuros
     */
    
    private ServerAccess.MEFF_Futuros conection;
    public Futuros_table() {
        initComponents();
        conection = new MEFF_Futuros();
        cleanTable();
        updateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new ViewExtentions.AlternateColorJTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Hora", "Volumen", "Ultimo", "Compra_Vol", "Compra_Precio", "Venta_Vol", "Venta_Precio", "Vencimiento", "Apertura", "Anterior", "MÃ¡ximo", "Minimo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
                .addGap(11, 11, 11))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1)
                .addGap(15, 15, 15))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void updateTable() {
        if(conection.getFutures()){
            DefaultTableModel tableData = (DefaultTableModel)jTable1.getModel();
            for (Futuro future : conection.Futuros) {
               tableData.addRow(future.toArray());
            }
        }
    }
    
    private void cleanTable(){
        DefaultTableModel tableData = (DefaultTableModel)jTable1.getModel();
        int rows = tableData.getRowCount();
        for(int i = (rows-1); i >=0;i-- ){
            tableData.removeRow(i);
        }
    }
    
    
}  
